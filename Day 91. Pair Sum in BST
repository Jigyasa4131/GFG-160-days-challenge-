/*
class Node {
    int data;
    Node left, right;

    public Node(int d) {
        data = d;
        left = right = null;
    }
}
*/
class Solution {
    boolean findTarget(Node root, int target) {
        // Write your code here
        List<Integer> inorder = new ArrayList<>();
        inorderTraversal(root, inorder);
        
        int left = 0;
        int right = inorder.size() - 1;
        while(left < right) {
            int sum = inorder.get(left) + inorder.get(right);
            if(sum == target){
                return true;
            }
            else if(sum < target){
                left++;
            }
            else{
                right--;
            }
        }
        return false;
    }
    private void inorderTraversal(Node root, List<Integer> list){
        if(root == null) return;
        inorderTraversal(root.left, list);
        list.add(root.data);
        inorderTraversal(root.right, list);
    }
}

