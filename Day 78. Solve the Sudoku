// User function Template for Java

class Solution {
    // Function to find a solved Sudoku.
    static void solveSudoku(int[][] mat) {
        // code here
        solve(mat); 
    }
    
    static boolean solve(int [][] board){
        for(int row = 0; row < 9; row++){
            for(int col = 0; col < 9; col++){
                if(board[row][col] == 0){
                    for(int num = 1; num <= 9; num++){
                        if(isSafe(board, row, col, num)){
                            board[row][col] = num;
                            // Recur to check if this lead to solution
                            
                            if(solve(board)) {
                                return true;
                            }
                            
                            board[row][col] = 0;
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    
    static boolean isSafe(int[][] board, int row, int col, int num){
        for(int i = 0; i < 9; i++){
            if(board[row][i] == num || board[i][col] == num){
                return false;
            }
        }
        
        int startRow = row - row % 3, startCol = col - col % 3;
        for(int i = 0; i < 3; i++){
            for(int j = 0;j < 3; j++){
                if(board[startRow + i][startCol + j] == num){
                    return false;
                }
            }
        }
        
        return true;
    }
}



















