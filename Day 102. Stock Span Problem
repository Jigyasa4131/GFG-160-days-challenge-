
class Solution {
    public ArrayList<Integer> calculateSpan(int[] arr) {
        // write code here
        ArrayList<Integer> span = new ArrayList<>();
        Stack<Integer> stack = new Stack<>(); // stores indices

        for (int i = 0; i < arr.length; i++) {
            // Pop elements from stack while top of stack is less than or equal to current
            while (!stack.isEmpty() && arr[stack.peek()] <= arr[i]) {
                stack.pop();
            }

            // If stack is empty, all elements before are smaller
            if (stack.isEmpty()) {
                span.add(i + 1);
            } else {
                span.add(i - stack.peek());
            }

            // Push current index
            stack.push(i);
        }

        return span;
    }
}
