/*class Node
{
    int data;
    Node next;

    Node(int key)
    {
        data = key;
        next = null;
    }
}
*/

// arr is an array of Nodes of the heads of linked lists

class Solution {
    // Function to merge K sorted linked list.
    Node mergeKLists(List<Node> arr) {
        // Add your code here.
        PriorityQueue<Node> pq = new PriorityQueue<>(arr.size(), (a,b) -> a.data - b.data);
        for(Node head : arr){
            if(head != null){
                pq.add(head);
            }
        }
        
        Node dummy = new Node(0);
        Node tail = dummy;
        
        while (!pq.isEmpty()){
            Node curr = pq.poll();
            tail.next = curr;
            tail = tail.next;
            
            if(curr.next != null){
                pq.add(curr.next);
            }
        }
        
        return dummy.next;
    }
}
