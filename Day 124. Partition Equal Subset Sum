class Solution {
    static boolean equalPartition(int arr[]) {
        // code here
        int n = arr.length;
        int totalSum = 0;
        
        for (int num : arr) {
            totalSum += num;
        }
        
        // If total sum is odd, we can't divide into two equal parts
        if (totalSum % 2 != 0)
            return false;
        
        int target = totalSum / 2;
        
        // DP array for subset sum
        boolean[] dp = new boolean[target + 1];
        dp[0] = true;  // sum 0 is always possible (empty subset)
        
        for (int num : arr) {
            for (int j = target; j >= num; j--) {
                dp[j] = dp[j] || dp[j - num];
            }
        }
        
        return dp[target];

    }
}
